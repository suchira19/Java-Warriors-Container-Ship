import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

public class Container {

  public Map<Integer,Stack> createContainer() {
    Map<Integer, Stack> container = new HashMap<>();
    Stack<String> elements = new Stack<>();
    elements.push("S");
    elements.push("L");
    elements.push("W");
    container.put(1,elements);
    Stack<String> elements1 = new Stack<>();
    elements1.push("J");
    elements1.push("O");
    elements1.push("N");
    elements1.push("Q");
    container.put(2,elements1);
    Stack<String> elements2 = new Stack<>();
    elements2.push("S");
    elements2.push("C");
    elements2.push("H");
    elements2.push("L");
    elements2.push("J");
    container.put(3,elements2);
    Stack<String> elements3 = new Stack<>();
    elements3.push("T");
    elements3.push("W");
    elements3.push("M");
    elements3.push("W");
    elements3.push("L");
    elements3.push("G");
    elements3.push("B");
    container.put(4,elements3);
    Stack<String> elements4 = new Stack<>();
    elements4.push("0");
    elements4.push("D");
    elements4.push("L");
    elements4.push("S");
    elements4.push("D");
    elements4.push("H");
    elements4.push("Q");
    elements4.push("A");
    container.put(5,elements4);
    Stack<String> elements5 = new Stack<>();
    elements5.push("M");
    elements5.push("J");
    elements5.push("B");
    elements5.push("V");
    elements5.push("L");
    elements5.push("H");
    elements5.push("R");
    elements5.push("L");
    container.put(6,elements5);
    Stack<String> elements6 = new Stack<>();
    elements6.push("D");
    elements6.push("W");
    elements6.push("R");
    elements6.push("N");
    elements6.push("J");
    elements6.push("M");
    container.put(7,elements6);
    Stack<String> elements7 = new Stack<>();
    elements7.push("!");
    elements7.push("Z");
    elements7.push("T");
    elements7.push("F");
    elements7.push("H");
    elements7.push("N");
    elements7.push("D");
    elements7.push("J");
    container.put(8,elements7);
    Stack<String> elements8 = new Stack<>();
    elements8.push("H");
    elements8.push("E");
    elements8.push("Q");
    elements8.push("N");
    elements8.push("B");
    elements8.push("E");
    elements8.push("T");
    container.put(9,elements8);
    return container;
  }
}
